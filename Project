######Wygenerowanie dotplot dla dwóch sekwencji  –tj. macierz pokazującą podobieństwo sekwencji na poszczególnych pozycjach
import fileinput
import sys
import matplotlib
import matplotlib as mlt
import matplotlib.pyplot as plt
import numpy as np

class Dotplot:
    def __init__(self,file_name):
        self.file_name=file_name
        self.sek1 = []
        self.sek2 = []
        self.pierwszy = 1
        self.stats = dict()
        self.macierz = None

    def read_sequence_from_file(self):
        with open(self.file_name, 'rt') as file:
            for line in file:
                line = line.rstrip().upper()
                if self.pierwszy and not line.startswith('>'):
                    for el in line:
                        self.sek1.append(el)
                    self.pierwszy = 0
                else:
                    if not line.startswith('>'):
                        for el in line:
                            self.sek2.append(el)

    def create_matrix(self):
        self.macierz = np.zeros(shape=(len(self.sek1), len(self.sek2)))
        for el in range (0, len(self.sek1)):
            for el1 in range (0, len(self.sek2)):
                if self.sek1[el] == self.sek2[el1]:
                    self.macierz[el][el1] = 1
                else:
                    self.macierz[el][el1] = 0
                 
    def create_dotplot(self):
        self.read_sequence_from_file()
        self.create_matrix()
        print(self.macierz)
        fig, ax = plt.subplots()
        im = ax.imshow(self.macierz)
        ax.set_xticks(np.arange(len(self.sek2)), labels=self.sek2)
        ax.set_yticks(np.arange(len(self.sek1)), labels=self.sek1)
        plt.setp(ax.get_xticklabels(), rotation=0, ha="right", rotation_mode="anchor")
        ax.set_title("dotplot")
        fig.tight_layout()
        plt.show()
              
p1 = Dotplot(sys.argv[1])
try:
  p1.read_sequence_from_file()
except FileNotFoundError:
  print("Plik nie znaleziony")
else:
  p1.create_matrix()
  p1.create_dotplot()
